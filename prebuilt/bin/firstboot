#! /system/bin/sh
#
# firstboot.sh
# WesGarner for OpenEclair

    # Create dump dir and collect dumps.
    # Do this before we mount cache so eventually we can use cache for
    # storing dumps on platforms which do not have a dedicated dump partition.
   
    mkdir /data/dontpanic
    chown root log /data/dontpanic
    chmod 0750 /data/dontpanic

    # Collect apanic data, free resources and re-arm trigger
    cp /proc/apanic_console /data/dontpanic/apanic_console
    chown root log /data/dontpanic/apanic_console
    chmod 0640 /data/dontpanic/apanic_console

    cp /proc/apanic_threads /data/dontpanic/apanic_threads
    chown root log /data/dontpanic/apanic_threads
    chmod 0640 /data/dontpanic/apanic_threads

    write /proc/apanic_console 1

    # This may have been created by the recovery system with odd permissions
    chown system system /cache/recovery
    chmod 0770 /cache/recovery

    #change permissions on vmallocinfo so we can grab it from bugreports
    chown root log /proc/vmallocinfo
    chmod 0440 /proc/vmallocinfo

    # create basic filesystem structure
    mkdir /data/misc 01771 system misc
    mkdir /data/misc/bluetoothd 0770 bluetooth bluetooth
    mkdir /data/misc/keystore 0700 keystore keystore
    mkdir /data/misc/vpn 0770 system system
    mkdir /data/misc/vpn/profiles 0770 system system
 
    # give system access to wpa_supplicant.conf for backup and restore
    mkdir /data/misc/wifi
    chmod 0770 /data/misc/wifi
    chown wifi.wifi /data/misc/wifi
    chmod 0660 /data/misc/wifi/wpa_supplicant.conf
    chown wifi.wifi /data/misc/wifi/wpa_supplicant.conf
    mkdir /data/misc/wifi/sockets
    chown wifi.wifi /data/misc/wifi/sockets
    chmod 0770 /data/misc/wifi/sockets
    mkdir /data/misc/dhcp
    chown dhcp.dhcp /data/misc/dhcp
    chmod 0770 /data/misc/dhcp
    mkdir /data/local 0771 shell shell
    mkdir /data/local/tmp 0771 shell shell
    mkdir /data/data 0771 system system
    mkdir /data/app-private 0771 system system
    mkdir /data/app 0771 system system
    mkdir /data/property 0700 root root

    # create dalvik-cache and double-check the perms
    mkdir /data/dalvik-cache 0771 system system
    chown system system /data/dalvik-cache
    chmod 0771 /data/dalvik-cache

    mkdir /cache/dalvik-cache 0771 system system
    chown system system /cache/dalvik-cache
    chmod 0771 /cache/dalvik-cache

    # create the lost+found directories, so as to enforce our permissions
    mkdir /data/lost+found 0770
    mkdir /cache/lost+found 0770

    # double check the perms, in case lost+found already exists, and set owner
    chown root root /data/lost+found
    chmod 0770 /data/lost+found
    chown root root /cache/lost+found
    chmod 0770 /cache/lost+found

{
    CPUINFO=$(cat /proc/cpuinfo | busybox grep Hardware | busybox cut - -d ' ' -f 2,3);
    if [ "${CPUINFO}" == "sapphire" ]; then
	echo "---AudioPara4.csv for MT3G";
	    mv /system/etc/AudioPara4-sapphire.csv /system/etc/AudioPara4.csv; > /dev/null
	
    fi;
}
{
    CPUINFO=$(cat /proc/cpuinfo | busybox grep Hardware | busybox cut - -d ' ' -f 2,3);
    if [ "${CPUINFO}" == "trout" ]; then
	echo "---AudioPara4.csv for G1";
	    mv /system/etc/AudioPara4-trout.csv /system/etc/AudioPara4.csv; > /dev/null
	
    fi;
}

echo "--- Symlinking Media Folder";
	busybox rm -r /data/.media;  > /dev/null
	busybox ln -s /data/media /system/media;

echo "--- Symlinking some System Apps";
busybox rm -r /data/app_s;
busybox mv /data/app_s_tmp /data/app_s;
for sysapp in /data/app_s/* ; do
	if [ -e /system/app/$(basename $sysapp) ]; then
		busybox rm /system/app/$(basename $sysapp); > /dev/null
	fi;
	if [ -h /system/app/$(basename $sysapp) ]; then
		busybox rm /system/app/$(basename $sysapp); > /dev/null
	fi;
	busybox ln -s $sysapp /system/app/$(basename $sysapp);
	echo "$sysapp Symlinked to data partition";
done;
